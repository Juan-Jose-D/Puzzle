#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ Simulador\ de\ Tilting\ Tiles\r\n\ \r\n\ @author\ ALexandra\ Moreno\ &\ Juan\ Jos\u00E9\ D\u00EDaz\r\n\ @version\ POOB\ 2024-2\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Constructor\ que\ crea\ un\ rompecabezas\ vac\u00EDo\ de\ dimensiones\ width\ x\ height\r\n\r\n\ @param\ width\ \ N\u00FAmero\ de\ columnas\ del\ rompecabezas.\r\n\ @param\ height\ N\u00FAmero\ de\ filas\ del\ rompecabezas.\r\n
comment10.params=
comment10.target=void\ makeVisible()
comment10.text=\r\n\ Muestra\ el\ rompecabezas\ \r\n
comment11.params=
comment11.target=void\ makeInvisible()
comment11.text=\r\n\ Oculta\ el\ rompecabezas\ \r\n
comment12.params=row\ column
comment12.target=void\ makeHole(int,\ int)
comment12.text=\r\n\ Permite\ agujerear\ una\ celda\ vacia\ \r\n
comment13.params=
comment13.target=void\ exchange()
comment13.text=\r\n\ Intercambia\ tableros\ de\ referencia\ y\ edici\u00F3n\ \r\n
comment14.params=
comment14.target=int\ misplacedTiles()
comment14.text=\r\n\ Consulta\ el\ n\u00FAmero\ de\ baldosas\ que\ faltan\ por\ ubicar\r\n
comment15.params=
comment15.target=void\ finish()
comment15.text=\r\n\ Cierra\ el\ simulador\r\n
comment2.params=ending
comment2.target=Puzzle(char[][])
comment2.text=\r\n\ Constructor\ del\ Puzzle\ final\r\n\r\n\ @param\ Recibe\ una\ matriz\ de\ caracteres\ individuales.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'r',\ 'g',\ 'b',\ 'y',\ '.'\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Ejemplo\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{'.',\ 'r',\ '.',\ '.'},{'r',\ 'g',\ 'y',\ 'b'},{'.',\ 'b',\ '.',\ '.'},{'.',\ 'y',\ 'r',\ '.'}}\r\n
comment3.params=starting\ ending
comment3.target=Puzzle(char[][],\ char[][])
comment3.text=\r\n\ Constructor\ de\ Puzzle\ inicial\ y\ final\r\n\r\n\ @param\ Recibe\ una\ matriz\ de\ caracteres\ individuales.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'r',\ 'g',\ 'b',\ 'y',\ '.'\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Ejemplo\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{'.',\ 'r',\ '.',\ '.'},{'r',\ 'g',\ 'y',\ 'b'},{'.',\ 'b',\ '.',\ '.'},{'.',\ 'y',\ 'r',\ '.'}}\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{'.',\ '.',\ '.',\ 'r'},{'r',\ 'g',\ 'y',\ 'b'},{'.',\ '.',\ '.',\ 'b'},{'.',\ '.',\ 'y',\ 'r'}}\r\n
comment4.params=row\ column\ color
comment4.target=void\ addTile(int,\ int,\ java.lang.String)
comment4.text=\r\n\ Add\ one\ Tile\ \r\n\ \r\n\ @param\ Recibe\ una\ fila,\ columna\ y\ color.\r\n\ \r\n
comment5.params=origen\ destino
comment5.target=void\ relocateTile(int[],\ int[])
comment5.text=\r\n\ Relocate\ a\ Tile\r\n\r\n\ @param\ Recibe\ dos\ arreglos,\ uno\ de\ origen\ y\ otro\ de\ destino.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Ejemplo\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Origen\:\ {1,1}\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Destino\:\ {0,0}\r\n
comment6.params=row\ column
comment6.target=void\ deleteTile(int,\ int)
comment6.text=\r\n\ Delete\ a\ Tile\ \r\n\ \r\n\ @param\ Recibe\ una\ fila\ y\ una\ columna.\r\n
comment7.params=
comment7.target=char[][]\ actualArrangement()
comment7.text=\r\n\ Devuelve\ matriz\ con\ las\ letras.\r\n
comment8.params=direction
comment8.target=void\ tilt(char)
comment8.text=\r\n\ Ladea\ el\ tablero\ en\ la\ direcci\u00F3n\ indicada.\r\n\r\n\ @param\ direction\ La\ direcci\u00F3n\ en\ la\ que\ se\ debe\ ladear\ el\ tablero.\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'r'\ Derecha.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'l'\ Izquierda.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'd'\ Abajo.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 'u'\ Arriba.\r\n
comment9.params=row\ column
comment9.target=void\ addGlue(int,\ int)
numComments=16
